<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GSoC on Rahul Jha (~RJ722) Blog</title><link>https://rj722.github.io/red/blog/tags/gsoc/</link><description>Recent content in GSoC on Rahul Jha (~RJ722) Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 28 May 2017 00:28:48 +0530</lastBuildDate><atom:link href="https://rj722.github.io/red/blog/tags/gsoc/index.xml" rel="self" type="application/rss+xml"/><item><title>GSoC Project</title><link>https://rj722.github.io/red/blog/gsoc_project/</link><pubDate>Sun, 28 May 2017 00:28:48 +0530</pubDate><guid>https://rj722.github.io/red/blog/gsoc_project/</guid><description>Overview The motivation, here, is to extend the functionality of vulture as a library, and to pass on all metadata through the API and then to harness this utility in VultureBear for auto removing dead code, which would greatly optimise the bear. The second part of this project focuses on offering the source range of the dead code which would make auto-removal much easier. As of now, vulture only supplies the beginning of the dead code.</description></item><item><title>GSoC Project Timeline</title><link>https://rj722.github.io/red/blog/project-timeline/</link><pubDate>Sun, 28 May 2017 00:28:48 +0530</pubDate><guid>https://rj722.github.io/red/blog/project-timeline/</guid><description>Here is a description of how I plan to manage my schedule during GSoC period.
Project Overview Presently, we have coala - an automatic code linter and vulture - dead code reporter. Amongst coala&amp;rsquo;s fundamental code checkers known as Bears, there is a VultureBear which runs vulture over the input batch of files and prepares a patch for the respective files. The project proposal focuses on improving the VultureBear and making vulture available as a library rather than as command line tool.</description></item></channel></rss>